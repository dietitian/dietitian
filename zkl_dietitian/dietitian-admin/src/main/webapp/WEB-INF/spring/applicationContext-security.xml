<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">
           
	<http pattern="/**/*.jpg" security="none"/>
    <http pattern="/**/*.png" security="none"/>
    <http pattern="/**/*.gif" security="none"/>
    <http pattern="/**/*.css" security="none"/>
    <http pattern="/**/*.js" security="none"/>
    <!-- <http pattern="/" security="none"/> -->
    <!-- <http pattern="/home.jsp" security="none"/> -->
   	<http pattern="/j_spring_security_check" security="none" />
    <http pattern="/login.jsp" security="none"/>
    <http access-denied-page="/error/403.jsp" ><!-- 当访问被拒绝时，会转到403.jsp -->
        <form-login login-page="/login.jsp"
            authentication-failure-url="/login.jsp?error=true"
            default-target-url="/home.jsp" />
        <logout logout-success-url="/" />
        <http-basic />
        
        <!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR"
            ref="myFilter" />
    </http>
    
    <beans:bean id="myFilter" class="com.stronginfo.transenly.admin.security.MyFilterSecurityInterceptor">
        <beans:property name="authenticationManager"  ref="authenticationManager" />
        <beans:property name="accessDecisionManager"  ref="myAccessDecisionManagerBean" />
        <beans:property name="securityMetadataSource"  ref="securityMetadataSource" />
    </beans:bean>
    
     <!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider
            user-service-ref="myUserDetailService">
            <!--   如果用户的密码采用加密的话，可以加点“盐”
                <password-encoder hash="md5" />
            -->
        </authentication-provider>
    </authentication-manager>
    <beans:bean id="myUserDetailService"
        class="com.stronginfo.transenly.admin.security.MyUserDetailService" >
        <beans:constructor-arg >
        <beans:ref bean="sessionFactory"></beans:ref>
        </beans:constructor-arg>
    </beans:bean>

    <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
    <beans:bean id="myAccessDecisionManagerBean"
        class="com.stronginfo.transenly.admin.security.MyAccessDecisionManager">
        
    </beans:bean>
    
    <!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
    <beans:bean id="securityMetadataSource"
        class="com.stronginfo.transenly.admin.security.MyInvocationSecurityMetadataSource" >
        <beans:constructor-arg ><beans:ref bean="sessionFactory"></beans:ref></beans:constructor-arg>
     </beans:bean>
	
</beans:beans>